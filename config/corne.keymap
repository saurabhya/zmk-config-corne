#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
  chain-length = <0>;
  // chain-length = <27>;
  // 21 backlight + 6 glowlight
};


#define TAPPING_TERM 200

/ {
  behaviors {
    /*
    * td_lock groups locking functions into one key:
    *  - tap once to lock the host
    *  - tap twice to put the host to sleep
    */

    td_lock: tap_dance_lock {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_LOCK";
      #binding-cells = <0>;
      tapping-term-ms = <TAPPING_TERM>;
      bindings = <&kp LG(LC(Q))>, <&kp LG(LA(C_EJECT))>;
    };
  };

  combos {
    compatible = "zmk,combos";

    Clear_BLE_Profile {
      bindings = <&bt BT_CLR>;
      key-positions = <0 38 5>;
    };

    Space {
      bindings = <&kp SPACE>;
      key-positions = <29 28>;
    };

    Enter {
      bindings = <&kp ENTER>;
      key-positions = <17 16>;
    };

    Capslock {
      bindings = <&kp CLCK>;
      key-positions = <5 6>;
    };
  };

  macros {
    git_status: git_status {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp G &kp I &kp T &kp SPACE &kp S &kp T &kp A &kp T &kp U &kp S>;
      label = "GIT_STATUS";
    };
    git_commit_all: git_commit_all {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp G &kp I &kp T &kp SPACE &kp C &kp O &kp M &kp M &kp I &kp T &kp SPACE &kp MINUS &kp A &kp MINUS &kp M &kp SPACE &kp DQT &kp DQT &kp LEFT_ARROW>;
      label = "GIT_COMMIT";
    };
  };

  keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEF";
            bindings = <
  &q_grave     &cmd_w_euro     &lt 3 E             &lt 2 R                  &lt 7 T        &lt 10 Y         &lt 3 U                   &lt 2 I              &kp O            &kp P
  &hm LCTRL A  &hm LEFT_ALT S  &hm LEFT_GUI D      &shift_tap LEFT_SHIFT F  &lt 5 G        &lt 5 H          &shift_tap RIGHT_SHIFT J  &hm LEFT_GUI K       &hm RIGHT_ALT L  &hm_quotes RCTRL 0
  &kp Z        &kp X           &kp C               &kp V                    &lt 8 B        &lt 4 N          &kp M                     &coma_semi           &dot_colon       &slashandbackslash
                               &lt 9 LEFT_BRACKET  &hm LEFT_GUI TAB         &lt 6 SPACE    &lt 6 BACKSPACE  &lt 5 ENTER               &lt 7 RIGHT_BRACKET
            >;
        };


        numpad_sym {
            bindings = <
  &kp EXCLAMATION  &kp CARET      &kp DOLLAR          &kp LEFT_BRACE              &kp RIGHT_BRACE          &multiply  &cmd_num_7  &cmd_num_8  &kp NUMBER_9  &plus_gte
  &hm LCTRL AT     &hm LALT PIPE  &hm LGUI AMPERSAND  &hm LSHFT LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &divide    &cmd_num_4  &cmd_num_5  &cmd_num_6    &minus_lte
  &kp PERCENT      &kp HASH       &kp ASTERISK        &kp LEFT_BRACKET            &kp RBKT                 &num_0     &cmd_num_1  &cmd_num_2  &num_3        &equals_thic_arrow
                                  &kp GRAVE           &mt LEFT_GUI UNDERSCORE     &trans                   &trans     &trans      &dot_comma
            >;
        };

        VIM {
            bindings = <
  &none                    &vim_word   &kp LA(RIGHT)  &kp LS(LG(Z))   &none           &kp K_COPY      &kp LG(Z)             &to 0                   &vim_o               &kp K_PASTE
  &hm LEFT_CONTROL ESCAPE  &kp LALT    &kp LEFT_GUI   &kp LEFT_SHIFT  &none           &kp LEFT        &hm RIGHT_SHIFT DOWN  &hm RIGHT_GUI UP_ARROW  &hm RIGHT_ALT RIGHT  &hm RCTRL ESCAPE
  &kp LEFT_SHIFT           &kp DELETE  &none          &kt LEFT_SHIFT  &kp LA(LEFT)    &none           &none                 &none                   &key_repeat          &none
                                       &kp LG(LEFT)   &trans          &trans          &vim_backspace  &trans                &end
            >;
        };

        FN_R {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &sys_reset   &kp F7        &kp F8        &kp F9  &kp F10
  &trans  &trans  &trans  &trans  &trans    &bootloader  &kp F4        &kp F5        &kp F6  &kp F11
  &trans  &trans  &trans  &trans  &trans    &kp K_LOCK   &kp F1        &kp F2        &kp F3  &kp F12
                  &trans  &trans  &trans    &bt BT_CLR   &bt BT_SEL 1  &bt BT_SEL 0
            >;
        };

        MEDIA_R {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans      &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_AUTO  &kp C_BRIGHTNESS_INC  &none
  &trans  &trans  &trans  &trans  &trans    &trans      &kp C_VOL_DN          &kp C_MUTE             &kp C_VOL_UP          &trans
  &trans  &trans  &trans  &trans  &trans    &trans      &kp C_PREV            &kp C_PLAY_PAUSE       &kp C_NEXT            &bootloader
                  &trans  &trans  &trans    &bt BT_CLR  &bt BT_SEL 1          &bt BT_SEL 0
            >;
        };

        MEDIA_L {
            bindings = <
  &trans       &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_AUTO  &kp C_BRIGHTNESS_INC  &to 0         &trans  &trans  &trans  &trans  &trans
  &trans       &kp C_VOL_DN          &kp C_MUTE             &kp C_VOL_UP          &to 1         &trans  &trans  &trans  &trans  &trans
  &bootloader  &kp C_PREV            &kp C_PLAY_PAUSE       &kp C_NEXT            &trans        &trans  &trans  &trans  &trans  &trans
                                     &bt BT_SEL 0           &bt BT_SEL 1          &bt BT_CLR    &trans  &trans  &trans
            >;
        };

        FN_L {
            bindings = <
  &bootloader  &kp F7  &kp F8        &kp F9        &kp F10       &trans  &trans  &trans  &trans  &trans
  &sys_reset   &kp F4  &kp F5        &kp F6        &kp F12       &trans  &trans  &trans  &trans  &trans
  &kp K_LOCK   &kp F1  &kp F2        &kp F3        &kp F12       &trans  &trans  &trans  &trans  &trans
                       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_CLR    &trans  &trans  &trans
            >;
        };


    };
};
